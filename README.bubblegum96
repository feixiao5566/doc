1. Directories
   doc/		Reference documentation.
   build/	Build scripts.
   tools/	The tools, include common and vendor specific.
   u-boot/	The source code of u-boot.
   linux/	The source code of linux kernel.

2. Download source code
   mkdir xprj
   cd xprj
   git clone https://github.com/wowotechX/doc.git
   git clone https://github.com/wowotechX/build.git
   git clone https://github.com/wowotechX/tools.git
   git clone https://github.com/wowotechX/u-boot.git
   git clone https://github.com/wowotechX/linux.git

3. Download toolchain compilers
   cd ./build
   make env_prepare

   Then the build script will download the suitable toolchain
   according to your board(assigned by config.mk) and your host
   environment.

   NOTE: mostly, you just need do it once.

4. Install neccessary package(Based Ubuntu)
   # udev
   sudo apt-get install libudev-dev

   # update dtc tools
   sudo apt-get remove device-tree-compiler

   sudo apt-get install device-tree-compiler
   # if not work, then build it from source code

   sudo apt-get install flex
   sudo apt-get install bison
   git clone https://kernel.org/pub/scm/utils/dtc/dtc.git -b 1.4.1

   cd dtc
   make
   make install

   export PATH=$HOME/bin/:$PATH

5. Preparation building
   cd ./build
   make libusb
   make dfu

   NOTE: mostly, you just need do it once.

6. Build u-boot, linux kernel, busybox, initramfs, uImage, etc.
   cd ./build
   make u-boot
   make kernel
   make busybox
   make initramfs
   make uImage

7. Download and run u-boot through USB DFU tools.
   a. press ADFU key, and reboot the board to ADFU mode.
   b. press ADFU key, download and run SPL, util it enter ADFU mode again
      make spl-run    # at ./build directory, a help command
   c. release ADFU key, download and run u-boot.
      make uboot-run  # at ./build directory, a help command

   You will see the command line in UART console. Enjoy it!

   Known issues:
      These operations cannot work on "Ubuntu 64bit" host. Instead, you should
      do another more operations:
      >. Connect the bubblegum96 board to PC using USB cable.
      a. press ADFU key, and reboot the board to ADFU mode.
      >. Disconnect the USB cable, then re-connect it.
      Okay, do what you should do according to the upper steps!!

8. Boot Linux kernel(stand alone, or with initramfs)
  a. press ADFU key, and reboot the board to ADFU mode.
  b. press ADFU key, download and run SPL, util it enter ADFU mode again
     make spl-run    # at ./build directory, a help command
  c. release ADFU key, download and run FIT uImage
     make kernel-run # at ./build directory, a help command

  If with initramfs, you will see the command line based on busybox
  in UART console. Enjoy it!
